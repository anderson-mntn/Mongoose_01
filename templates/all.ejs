<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<body>
    <h2>All Saved Links</h2>
    <p><a href="/add">Add new link</a></p>
    <% for(let i = 0; i < links.length; i++){ %>
        <div id="<%=links[i]._id%>">
            <h2><%=links[i].title%></h2>
            <div><%=links[i].description%></div>
            <div><%=links[i].url%></div>
            <button onclick="deletarLink('<%=links[i]._id%>')">Deletar</button>
            <a href="/edit/<%=links[i]._id%>">Edit</a>
        </div>
    <%}%>

    

       

    <!--    
        - DeletarLink(): 
        formulários só podem mandar metodos GET e POST,
        para mandar um DELETE, usaremos fetch, no button click

        -- tambem podemos usar o method-override, para não precisar usar fetch,
        assim passando method post no nosso form
        - Pesquisar no google por: method_override // express e seguir o passo a passo.
        no router.delete podemos trocar o express.json() para urlencoded,
        adicionar router.use(methodOverride('_method')).
        - E no controller adicionar res.redirect('/all') para recarregar página ao deletar um item

    -->

    <script>
        function deletarLink(id){
            fetch('/' + id, {method: 'DELETE'}) // id forçando a rota
            .then(res=>{
                
                if(res.status == 200){
                    res.text().then(linkId=>{
                        console.log(linkId);
                        document.getElementById(linkId).remove();
                    })
                } else {
                    res.json().then(err=>{
                        console.log(err.message);
                        alert(err.message);
                    })
                }
                
            })
        }  
    </script>

</body>
</html>